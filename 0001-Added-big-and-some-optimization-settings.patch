From 2d74997f0e1aff4fa6dbb5b389128165f953901c Mon Sep 17 00:00:00 2001
From: gitea-admin <admin@admin.com>
Date: Mon, 11 Nov 2019 09:41:59 +0530
Subject: [PATCH] Added big and some optimization settings

---
 Makefile |  6 ++++--
 big.c    | 53 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 57 insertions(+), 2 deletions(-)
 create mode 100644 big.c

diff --git a/Makefile b/Makefile
index 09d790c..a7044ff 100644
--- a/Makefile
+++ b/Makefile
@@ -181,6 +181,7 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
+	_big\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
@@ -217,9 +218,9 @@ QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \
 	then echo "-gdb tcp::$(GDBPORT)"; \
 	else echo "-s -p $(GDBPORT)"; fi)
 ifndef CPUS
-CPUS := 2
+CPUS := 1
 endif
-QEMUOPTS = -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp $(CPUS) -m 512 $(QEMUEXTRA)
+QEMUOPTS = -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp $(CPUS) -m 512 $(QEMUEXTRA) -snapshot
 
 qemu: fs.img xv6.img
 	$(QEMU) -serial mon:stdio $(QEMUOPTS)
@@ -253,6 +254,7 @@ EXTRA=\
 	printf.c umalloc.c\
 	README dot-bochsrc *.pl toc.* runoff runoff1 runoff.list\
 	.gdbinit.tmpl gdbutil\
+	big.c\
 
 dist:
 	rm -rf dist
diff --git a/big.c b/big.c
new file mode 100644
index 0000000..cecf1a0
--- /dev/null
+++ b/big.c
@@ -0,0 +1,53 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+#include "fcntl.h"
+
+int
+main()
+{
+  char buf[512];
+  int fd, i, sectors;
+
+  fd = open("big.file", O_CREATE | O_WRONLY);
+  if(fd < 0){
+    printf(2, "big: cannot open big.file for writing\n");
+    exit();
+  }
+
+  sectors = 0;
+  while(1){
+    *(int*)buf = sectors;
+    int cc = write(fd, buf, sizeof(buf));
+    if(cc <= 0)
+      break;
+    sectors++;
+	if (sectors % 100 == 0)
+		printf(2, ".");
+  }
+
+  printf(1, "\nwrote %d sectors\n", sectors);
+
+  close(fd);
+  fd = open("big.file", O_RDONLY);
+  if(fd < 0){
+    printf(2, "big: cannot re-open big.file for reading\n");
+    exit();
+  }
+  for(i = 0; i < sectors; i++){
+    int cc = read(fd, buf, sizeof(buf));
+    if(cc <= 0){
+      printf(2, "big: read error at sector %d\n", i);
+      exit();
+    }
+    if(*(int*)buf != i){
+      printf(2, "big: read the wrong data (%d) for sector %d\n",
+             *(int*)buf, i);
+      exit();
+    }
+  }
+
+  printf(1, "done; ok\n"); 
+
+  exit();
+}
-- 
2.21.0 (Apple Git-122.2)

